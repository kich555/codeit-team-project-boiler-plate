name: Merge Pull Request

on:
  issue_comment:
    types: [created]

jobs:
  merge-pr:
    if: >
      github.event.issue.pull_request &&
      github.event.comment.body == '/merge' &&
      github.event.comment.user.id == github.event.issue.user.id
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Merge Pull Request
         uses: actions/github-script@v5
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const pull_number = context.issue.number;

            const mergeable = await github.pulls.get({
              owner,
              repo,
              pull_number
            }).then(pr => pr.data.mergeable);

            if (!mergeable) {
              core.setFailed('PR is not mergeable. Please check PR.');
              return;
            }

            const merge_method = 'merge'; // 'merge', 'squash', or 'rebase'

            // if head_ref type is 'epic' or 'feat' or 'fix' or 'refactor', do squash merge
            const type = head_ref.split('/')[0];
            if (['epic', 'feat', 'fix', 'refactor'].includes(type)) {
              merge_method = 'squash';
            }

            // Merge PR
            await github.pulls.merge({ owner, repo, pull_number, merge_method }).then(response => {
              if (!response.data.merged) {
                core.setFailed('PR was not merged. Please check PR.');
              }
            });
